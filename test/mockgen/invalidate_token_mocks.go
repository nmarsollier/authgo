// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/usecases/invalidate_token.go

// Package mockgen is a generated GoMock package.
package mockgen

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockInvalidateTokenUseCase is a mock of InvalidateTokenUseCase interface.
type MockInvalidateTokenUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockInvalidateTokenUseCaseMockRecorder
}

// MockInvalidateTokenUseCaseMockRecorder is the mock recorder for MockInvalidateTokenUseCase.
type MockInvalidateTokenUseCaseMockRecorder struct {
	mock *MockInvalidateTokenUseCase
}

// NewMockInvalidateTokenUseCase creates a new mock instance.
func NewMockInvalidateTokenUseCase(ctrl *gomock.Controller) *MockInvalidateTokenUseCase {
	mock := &MockInvalidateTokenUseCase{ctrl: ctrl}
	mock.recorder = &MockInvalidateTokenUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInvalidateTokenUseCase) EXPECT() *MockInvalidateTokenUseCaseMockRecorder {
	return m.recorder
}

// InvalidateToken mocks base method.
func (m *MockInvalidateTokenUseCase) InvalidateToken(token string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InvalidateToken", token)
	ret0, _ := ret[0].(error)
	return ret0
}

// InvalidateToken indicates an expected call of InvalidateToken.
func (mr *MockInvalidateTokenUseCaseMockRecorder) InvalidateToken(token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InvalidateToken", reflect.TypeOf((*MockInvalidateTokenUseCase)(nil).InvalidateToken), token)
}
